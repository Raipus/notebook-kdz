<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>